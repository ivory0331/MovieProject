<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="movie">
	
	<select id="idDuplicateCheck" parameterType="String" resultType="String">
      select userid
      from tbl_mv_member
      where userid = #{userid}
    </select>
	
	<insert id="registerMember" parameterType="com.spring.model.MemberVO">
		insert into tbl_mv_member(userid, name, pwd, identity, email, mobile, point,
		 		writer_level, register_date, delt_status, last_login_date,
		 		pwd_change_date, nickname, bank_name, bank_num)
    	values(#{userid}, #{name}, #{pwd}, default, #{email}, #{mobile}, default, 
    			default, default, default, default,
    	 		default , #{nickname}, #{bank_name}, #{bank_num})
	</insert>
	
	<!-- === #47. 로그인 처리하기 === -->
	<select id="getLoginMember" parameterType="HashMap" resultType="com.spring.model.MemberVO">
		select userid, name, nickname, identity
         	 , trunc( months_between(sysdate, pwd_change_date) ) AS pwdchangegap
         	 , trunc( months_between(sysdate, last_login_date) ) AS lastlogindategap
		from tbl_mv_member
		where delt_status = 1 and
			  userid = #{userid} and
			  pwd = #{pwd}
	</select>

	<select id="getFreeboardList" parameterType="HashMap" resultType="com.spring.model.postVO">
		select rno, post_seq, userid, nickname, title, view_cnt, write_date
		from
		    (
		    select rownum as rno, post_seq, userid, nickname, title, view_cnt, write_date
		    from
		        (
		        select post_seq, substr(userid, 1, 3) || lpad('*', length(userid)-3,'*') AS userid, nickname, title, view_cnt, to_char(write_date,'yyyy-mm-dd') as write_date
		        from tbl_post
		        where delt_status = 1 and  board_num = 2
		        	<if test='searchWord != "" '>
			         and ${searchType} like '%'|| #{searchWord} ||'%'
			        </if>
		        order by post_seq desc
		        ) V
		    ) T
		where rno between #{startRno} and #{endRno}
	</select>
	
	<insert id="addfreeboard" parameterType="com.spring.model.postVO">
		insert into tbl_post(post_seq, board_num, userid, nickname, title,
		 					 content, write_date, delt_status, secret)
    	values(post_seq.nextval, 2, #{userid}, #{nickname}, #{title},
    		   #{content}, default, default, default)
	</insert>
	
	<select id="getFreeboardView" parameterType="HashMap" resultType="com.spring.model.postVO">
		select previousseq, previoussubject, post_seq, userid, nickname, title, content, view_cnt, write_date
		      ,nextseq, nextsubject
		from
		(
		 select lag(post_seq, 1) over(order by post_seq desc) as previousseq  
				           , nvl(lag(title, 1) over(order by post_seq desc),'이전글이 없습니다')as previoussubject				           				           
				           , post_seq, substr(userid, 1, 3) || lpad('*', length(userid)-3,'*') AS userid, userid AS originuser,nickname, title, content, view_cnt
				           , to_char(write_date, 'yyyy-mm-dd hh24:mi:ss') as write_date				         
				           , lead(post_seq, 1) over(order by post_seq desc) as nextseq
				           , nvl(lead(title, 1) over(order by post_seq desc),'다음글이 없습니다.') as nextsubject
				      from tbl_post
				      where delt_status = 1 and board_num = 2
		) V
		where post_seq = #{post_seq}
	</select>	
	
	<select id="getFreeTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_post
		where delt_status = 1 and board_num = 2
		<if test='searchWord != ""'>
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>	
	</select>
	
	<update id="addViewCnt" parameterType="HashMap">
		update tbl_post set view_cnt = view_cnt + 1
		where post_seq = #{post_seq} and userid != #{userid}
	</update>
	
	
</mapper>